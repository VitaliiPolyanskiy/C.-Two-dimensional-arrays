#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	// Двумерный массив - это частный случай многомерного массива.
	// Двумерный массив представляет собой совокупность строк и столбцов, на пересечении которых 
	// находится конкретное значение. Объявить двумерный массив несложно, необходимо указать 
	// количество строк и столбцов. При этом здесь действуют все те же правила, что и при объявлении 
	// одномерного массива, то есть необходимо в качестве значения количества строк и столбцов указывать 
	// константные  целочисленные значения. 
	// Синтаксис объявления двумерного массива:
	//      тип_данных имя_массива[число_строк][число_столбцов];
	const int nSize1 = 2;
	const int nSize2 = 3;

	int ar[nSize1][nSize2];

	// Двумерный массив можно рассматривать как совокупность, не просто строк, а одномерных 
	// массивов.

	// Обращение к конкретному элементу массива производится по номеру строки и номеру столбца, 
	// например - ar[2][1] - значение, лежащее на пересечении второй строки и первого столбца.

	// Инициализация.
	// Инициализация двумерного массива также аналогична инициализации одномерного: 
	// 1. Инициализация при создании. 
	// Каждая строка заключается в отдельные фигурные скобки:
	int br[2][2] = { { 1, 2 }, { 7, 8 } };

	// Значения указываются подряд и построчно вписываются в массив:
	int cr[2][2] = { 7, 8, 10, 3 };

	// Если значение пропущено, оно будет инициализировано нулем:
	int dr[3][3] = { { 7, 8 }, { 10, 3, 5 } };

	// 2. Инициализация c помощью цикла.

	// Определение количества столбцов.
	const int nCol = 4;

	// Определение количества строк.
	const int nRow = 3;

	// Объявление массива.
	int er[nRow][nCol];

	srand(time(0));

	// Перебираем отдельные строки (одномерные массивы в совокупности).
	for (int i = 0; i < nRow; i++)
	{
		// Перебираем отдельные элементы каждой строки.
		for (int j = 0; j < nCol; j++)
		{
			// Присвоение значения элементу в диапазоне от 0 до 100.
			er[i][j] = rand() % 100;
		}
	}

	// Вывод двумерного массива.
	for (int i = 0; i < nRow; i++)
	{
		for (int j = 0; j < nCol; j++)
		{
			cout << er[i][j] << '\t';
		}
		cout << endl;
	}

	return 0;
}